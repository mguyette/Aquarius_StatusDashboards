Function DashboardDataTableScript(ByRef Error As String, ByVal LocationIdentifier As String, ByVal ParameterIdentifiers As String) As DataTable
  DataTable dt
  String error
  String sql
 
  sql="select distinct 
       PARAMETER as PARAM,
       to_char(LASTSAMPLED,'MON dd, yyyy hh:mi AM') as LAST_SAMPLED,
       /* If the last reported timestamp is more than 6 hours old, report number of hours overdue */
       case when (-(extract(day from LASTSAMPLED - systimestamp)*24 + extract(hour from (LASTSAMPLED - systimestamp)))) > 6 then 
                 (-(extract(day from LASTSAMPLED - systimestamp)*24 + extract(hour from (LASTSAMPLED - systimestamp)))) else null end as HOURS_OVERDUE,
       /* If it is reporting NANs */
       case when (LATEST_ALL is null and MAXIMUM_ALL is null and MINIMUM_ALL is null 
                  and (-(extract(day from LASTSAMPLED - systimestamp)*24 + extract(hour from (LASTSAMPLED - systimestamp)))) <= 6)  
                  then '!' else null end as NANS,
       /* If there are repeating values */
       case when (MAXIMUM_ALL = MINIMUM_ALL)
                  then '!' else null end as REPEATING_VALUES,
       /* If there are any problems (overdue, NANs, repeating values)
          Check if there are no comments yet or if the last sample date is less than 7 days ago
          Down if there are comments or the last sample date is more than 7 days ago*/
       case when ((-(extract(day from LASTSAMPLED - systimestamp)*24 + extract(hour from (LASTSAMPLED - systimestamp)))) > 6
                  or (LATEST_ALL is null and MAXIMUM_ALL is null and MINIMUM_ALL is null  
                  and (-(extract(day from LASTSAMPLED - systimestamp)*24 + extract(hour from (LASTSAMPLED - systimestamp)))) <= 6) 
                  or MAXIMUM_ALL = MINIMUM_ALL) and (COMMENTS is not null or 
                  (-(extract(day from LASTSAMPLED - systimestamp)*24 + extract(hour from (LASTSAMPLED - systimestamp)))) > 168) then 'DOWN' 
                  when ((-(extract(day from LASTSAMPLED - systimestamp)*24 + extract(hour from (LASTSAMPLED - systimestamp)))) > 6
                  or (LATEST_ALL is null and MAXIMUM_ALL is null and MINIMUM_ALL is null  
                  and (-(extract(day from LASTSAMPLED - systimestamp)*24 + extract(hour from (LASTSAMPLED - systimestamp)))) <= 6) 
                  or MAXIMUM_ALL = MINIMUM_ALL) and COMMENTS is null then 'CHECK'
                  when LASTSAMPLED is null then 'NO DATA'
                  else 'OK' end as STATUS,
       /* Get comments when there are problems (overdue, NANs, repeating values) */
       case when ((-(extract(day from LASTSAMPLED - systimestamp)*24 + extract(hour from (LASTSAMPLED - systimestamp)))) > 6
                  or (LATEST_ALL is null and MAXIMUM_ALL is null and MINIMUM_ALL is null  
                  and (-(extract(day from LASTSAMPLED - systimestamp)*24 + extract(hour from (LASTSAMPLED - systimestamp)))) <= 6) 
                  or MAXIMUM_ALL = MINIMUM_ALL) 
                  then cast(COMMENTS as nvarchar2(200)) else cast('' as nvarchar2(20)) end as COMMENTS
from
(
with t as 
  (
  select 
  DID,
  LASTSAMPLED,
  PARAMETER, 
  listagg(LATEST, '') within group (order by PARAMETER) as LATEST_ALL,
  listagg(MAXIMUM, '') within group (order by PARAMETER) as MAXIMUM_ALL,
  listagg(MINIMUM, '') within group (order by PARAMETER) as MINIMUM_ALL
  from 
    (
    select d.datasetid DID, d.endtime LASTSAMPLED, p.displayid PARAMETER, sv.value STATVALUE, substr(sd.name,1,3) STATNAME
    from
    w_location l, w_dataset d, w_parameter p, w_statdef sd, w_statvalue sv
    where d.locationid=l.locationid
    and p.parameterid = d.parameterid
    and sv.datasetid(+)=d.datasetid
    and sv.statisticdefinitionid=sd.statisticdefinitionid(+)
    and p.identifier in (" & ParameterIdentifiers & ")
    and d.label in ('YSI','SUNA','CycleP')
    and l.identifier = '" & LocationIdentifier & "'
    and (sd.name like 'LATEST%' or sd.name like 'MAX%' or sd.name like 'MIN%' or sd.name is null)
    and d.sourceidentifier not like '%Dissolved Oxygen2%'    
    order by p.displayid asc
    )
    pivot
    (
    sum(STATVALUE)
    for STATNAME in ('LAT' LATEST,'MAX' MAXIMUM, 'MIN' MINIMUM)
    )
  group by DID, LASTSAMPLED, PARAMETER
  )
select t.*, d.comments COMMENTS
from t, w_dataset d
where
t.did = d.datasetid(+)
)

order by PARAMETER"
 
  dt=DatabaseQuery(error,sql)
  DashboardDataTableScript = dt
End Function