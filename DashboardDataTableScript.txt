Function DashboardDataTableScript(ByRef Error As String, ByVal LocationIdentifier As String, ByVal ParameterIdentifiers As String) As DataTable
  DataTable dt
  String error
  String sql

  sql =  "SELECT parameter AS param,
                 to_char(lastsampled, 'MON dd, yyyy hh:mi AM') AS last_sampled,
                 /* if the last reported timestamp is more than 6 hours old, report number of hours overdue */
                 CASE WHEN (-(EXTRACT(DAY FROM lastsampled - SYSTIMESTAMP)*24 + EXTRACT(HOUR FROM (lastsampled - SYSTIMESTAMP)))) > 6 THEN
                           (-(EXTRACT(DAY FROM lastsampled - SYSTIMESTAMP)*24 + EXTRACT(HOUR FROM (lastsampled - SYSTIMESTAMP)))) ELSE NULL END AS hours_overdue,
                 /* if it is reporting nans */
                 CASE WHEN (latest_all IS NULL AND maximum_all IS NULL AND minimum_all IS NULL
                            AND (-(EXTRACT(DAY FROM lastsampled - SYSTIMESTAMP)*24 + EXTRACT(HOUR FROM (lastsampled - SYSTIMESTAMP)))) <= 6)
                            THEN '!' ELSE NULL END AS nans,
                 /* if there are repeating values */
                 CASE WHEN (maximum_all = minimum_all)
                            THEN '!' ELSE NULL END AS repeating_values,
                 /* if there are any problems (overdue, nans, repeating values)
                    CHECK if there are no comments yet or if the last sample date is less than 7 days ago
                    DOWN if there are comments or the last sample date is more than 7 days ago*/
                 CASE WHEN ((-(EXTRACT(DAY FROM lastsampled - SYSTIMESTAMP)*24 + EXTRACT(HOUR FROM (lastsampled - SYSTIMESTAMP)))) > 6
                            OR (latest_all IS NULL AND maximum_all IS NULL AND minimum_all IS NULL
                            AND (-(EXTRACT(DAY FROM lastsampled - SYSTIMESTAMP)*24 + EXTRACT(HOUR FROM (lastsampled - SYSTIMESTAMP)))) <= 6)
                            OR maximum_all = minimum_all) AND (comments IS NOT NULL OR
                            (-(EXTRACT(DAY FROM lastsampled - SYSTIMESTAMP)*24 + EXTRACT(HOUR FROM (lastsampled - SYSTIMESTAMP)))) > 168) THEN 'DOWN'
                            WHEN ((-(EXTRACT(DAY FROM lastsampled - SYSTIMESTAMP)*24 + EXTRACT(HOUR FROM (lastsampled - SYSTIMESTAMP)))) > 6
                            OR (latest_all IS NULL AND maximum_all IS NULL AND minimum_all IS NULL
                            AND (-(EXTRACT(DAY FROM lastsampled - SYSTIMESTAMP)*24 + EXTRACT(HOUR FROM (lastsampled - SYSTIMESTAMP)))) <= 6)
                            OR maximum_all = minimum_all) AND comments IS NULL THEN 'CHECK'
                            WHEN lastsampled IS NULL THEN 'NO DATA'
                            ELSE 'OK' END AS status,
                 /* get comments when there are problems (overdue, nans, repeating values) */
                 CASE WHEN ((-(EXTRACT(DAY FROM lastsampled - SYSTIMESTAMP)*24 + EXTRACT(HOUR FROM (lastsampled - SYSTIMESTAMP)))) > 6
                            OR (latest_all IS NULL AND maximum_all IS NULL AND minimum_all IS NULL
                            AND (-(EXTRACT(DAY FROM lastsampled - SYSTIMESTAMP)*24 + EXTRACT(HOUR FROM (lastsampled - SYSTIMESTAMP)))) <= 6)
                            OR maximum_all = minimum_all)
                            THEN CAST(comments AS NVARCHAR2(200)) ELSE CAST('' AS NVARCHAR2(20)) END AS comments
           FROM
          (WITH t AS
                (SELECT did, lastsampled, parameter,
                        listagg(latest, '') WITHIN GROUP (ORDER BY parameter) AS latest_all,
                        listagg(maximum, '') WITHIN GROUP (ORDER BY parameter) AS maximum_all,
                        listagg(minimum, '') WITHIN GROUP (ORDER BY parameter) AS minimum_all
                   FROM
                        (SELECT d.datasetid AS did, d.endtime AS lastsampled, p.displayid AS parameter,
                                sv.value AS statvalue, substr(sd.name,1,3) AS statname
                           FROM w_dataset d
                                LEFT JOIN w_location l
                                ON d.locationid = l.locationid
                                LEFT JOIN w_parameter p
                                ON d.parameterid = p.parameterid
                                LEFT JOIN w_statvalue sv
                                ON d.datasetid = sv.datasetid
                                LEFT JOIN w_statdef sd
                                ON sv.statisticdefinitionid = sd.statisticdefinitionid
                          WHERE p.identifier IN " & ParameterIdentifiers & "
                          AND d.label IN ('YSI', 'SUNA', 'CycleP')
                          AND l.identifier = '" & LocationIdentifier & "'
                          AND (sd.name LIKE 'LATEST%' OR sd.name LIKE 'MAX%' OR sd.name LIKE 'MIN%' OR sd.name IS NULL)
                          ORDER BY p.displayid ASC)
                    pivot
                          (sum(statvalue) FOR statname IN ('LAT' latest, 'MAX' maximum, 'MIN' minimum))
                 GROUP BY did, lastsampled, parameter)
          SELECT t.*, d.comments comments
            FROM t
                 LEFT JOIN w_dataset d
                 ON t.did = d.datasetid)
           ORDER BY parameter"

  dt=DatabaseQuery(error,sql)
  DashboardDataTableScript = dt
End Function
